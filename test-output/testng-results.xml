<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="20" passed="20" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-01-31T18:10:40 IST" name="Default suite" finished-at="2023-01-31T18:25:58 IST" duration-ms="918366">
    <groups>
    </groups>
    <test started-at="2023-01-31T18:10:40 IST" name="Default test" finished-at="2023-01-31T18:25:58 IST" duration-ms="918366">
      <class name="TestCases.TestCases">
        <test-method is-config="true" signature="setUp()[pri:0, instance:TestCases.TestCases@3835c46]" started-at="2023-01-31T18:10:39 IST" name="setUp" finished-at="2023-01-31T18:10:40 IST" duration-ms="260" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:TestCases.TestCases@3835c46]" started-at="2023-01-31T18:10:40 IST" name="beforeTest" finished-at="2023-01-31T18:11:33 IST" duration-ms="53756" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public static void TestCases.TestCases.Are_Profile_ResetPassword_Logout_Present()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method signature="Are_Profile_ResetPassword_Logout_Present()[pri:0, instance:TestCases.TestCases@3835c46]" started-at="2023-01-31T18:11:33 IST" name="Are_Profile_ResetPassword_Logout_Present" finished-at="2023-01-31T18:12:12 IST" duration-ms="38496" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Are_Profile_ResetPassword_Logout_Present -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:TestCases.TestCases@3835c46]" started-at="2023-01-31T18:12:12 IST" name="afterTest" finished-at="2023-01-31T18:12:12 IST" duration-ms="283" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method is-config="true" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:TestCases.TestCases@3835c46]" started-at="2023-01-31T18:12:12 IST" name="beforeTest" finished-at="2023-01-31T18:12:27 IST" duration-ms="15183" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public static void TestCases.TestCases.Company_Name_Is_Present_On_Header_On_HomePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method signature="Company_Name_Is_Present_On_Header_On_HomePage()[pri:0, instance:TestCases.TestCases@3835c46]" started-at="2023-01-31T18:12:27 IST" name="Company_Name_Is_Present_On_Header_On_HomePage" finished-at="2023-01-31T18:12:42 IST" duration-ms="14313" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Company_Name_Is_Present_On_Header_On_HomePage -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:TestCases.TestCases@3835c46]" started-at="2023-01-31T18:12:42 IST" name="afterTest" finished-at="2023-01-31T18:12:42 IST" duration-ms="214" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method is-config="true" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:TestCases.TestCases@3835c46]" started-at="2023-01-31T18:12:42 IST" name="beforeTest" finished-at="2023-01-31T18:13:06 IST" duration-ms="24036" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public static void TestCases.TestCases.Edit_Profile_Picture_After_Uploading_And_Saving_Different_Picture_First()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method signature="Edit_Profile_Picture_After_Uploading_And_Saving_Different_Picture_First()[pri:0, instance:TestCases.TestCases@3835c46]" started-at="2023-01-31T18:13:06 IST" name="Edit_Profile_Picture_After_Uploading_And_Saving_Different_Picture_First" finished-at="2023-01-31T18:13:51 IST" duration-ms="45512" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Edit_Profile_Picture_After_Uploading_And_Saving_Different_Picture_First -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:TestCases.TestCases@3835c46]" started-at="2023-01-31T18:13:51 IST" name="afterTest" finished-at="2023-01-31T18:13:52 IST" duration-ms="276" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method is-config="true" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:TestCases.TestCases@3835c46]" started-at="2023-01-31T18:13:52 IST" name="beforeTest" finished-at="2023-01-31T18:14:36 IST" duration-ms="44574" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public static void TestCases.TestCases.Error_message_Should_Be_Displayed_If_User_Enter_Wrong_Existing_Password_While_Reseting_Password()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method signature="Error_message_Should_Be_Displayed_If_User_Enter_Wrong_Existing_Password_While_Reseting_Password()[pri:0, instance:TestCases.TestCases@3835c46]" started-at="2023-01-31T18:14:36 IST" name="Error_message_Should_Be_Displayed_If_User_Enter_Wrong_Existing_Password_While_Reseting_Password" finished-at="2023-01-31T18:15:12 IST" duration-ms="35612" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Error_message_Should_Be_Displayed_If_User_Enter_Wrong_Existing_Password_While_Reseting_Password -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:TestCases.TestCases@3835c46]" started-at="2023-01-31T18:15:12 IST" name="afterTest" finished-at="2023-01-31T18:15:12 IST" duration-ms="282" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method is-config="true" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:TestCases.TestCases@3835c46]" started-at="2023-01-31T18:15:12 IST" name="beforeTest" finished-at="2023-01-31T18:15:38 IST" duration-ms="26025" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public static void TestCases.TestCases.Forgot_Password_Link_Is_Clickable_And_Functional()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method signature="Forgot_Password_Link_Is_Clickable_And_Functional()[pri:0, instance:TestCases.TestCases@3835c46]" started-at="2023-01-31T18:15:38 IST" name="Forgot_Password_Link_Is_Clickable_And_Functional" finished-at="2023-01-31T18:15:44 IST" duration-ms="6172" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Forgot_Password_Link_Is_Clickable_And_Functional -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:TestCases.TestCases@3835c46]" started-at="2023-01-31T18:15:44 IST" name="afterTest" finished-at="2023-01-31T18:15:45 IST" duration-ms="211" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method is-config="true" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:TestCases.TestCases@3835c46]" started-at="2023-01-31T18:15:45 IST" name="beforeTest" finished-at="2023-01-31T18:16:21 IST" duration-ms="36705" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public static void TestCases.TestCases.Test_Email_In_Profie_Is_Not_Editable()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method signature="Test_Email_In_Profie_Is_Not_Editable()[pri:0, instance:TestCases.TestCases@3835c46]" started-at="2023-01-31T18:16:21 IST" name="Test_Email_In_Profie_Is_Not_Editable" finished-at="2023-01-31T18:16:50 IST" duration-ms="28480" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_Email_In_Profie_Is_Not_Editable -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:TestCases.TestCases@3835c46]" started-at="2023-01-31T18:16:50 IST" name="afterTest" finished-at="2023-01-31T18:16:50 IST" duration-ms="260" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method is-config="true" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:TestCases.TestCases@3835c46]" started-at="2023-01-31T18:16:50 IST" name="beforeTest" finished-at="2023-01-31T18:17:06 IST" duration-ms="15771" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public static void TestCases.TestCases.Test_If_Error_Message_Is_Displayed_When_New_Password_And_Confirm_Password_Are_Not_Matching()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method signature="Test_If_Error_Message_Is_Displayed_When_New_Password_And_Confirm_Password_Are_Not_Matching()[pri:0, instance:TestCases.TestCases@3835c46]" started-at="2023-01-31T18:17:06 IST" name="Test_If_Error_Message_Is_Displayed_When_New_Password_And_Confirm_Password_Are_Not_Matching" finished-at="2023-01-31T18:17:33 IST" duration-ms="27176" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_If_Error_Message_Is_Displayed_When_New_Password_And_Confirm_Password_Are_Not_Matching -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:TestCases.TestCases@3835c46]" started-at="2023-01-31T18:17:33 IST" name="afterTest" finished-at="2023-01-31T18:17:33 IST" duration-ms="249" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method is-config="true" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:TestCases.TestCases@3835c46]" started-at="2023-01-31T18:17:33 IST" name="beforeTest" finished-at="2023-01-31T18:17:55 IST" duration-ms="22268" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public static void TestCases.TestCases.Test_If_User_Is_Able_To_Logout_Of_Application_On_clicking_Logout_Button()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method signature="Test_If_User_Is_Able_To_Logout_Of_Application_On_clicking_Logout_Button()[pri:0, instance:TestCases.TestCases@3835c46]" started-at="2023-01-31T18:17:55 IST" name="Test_If_User_Is_Able_To_Logout_Of_Application_On_clicking_Logout_Button" finished-at="2023-01-31T18:18:17 IST" duration-ms="21600" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_If_User_Is_Able_To_Logout_Of_Application_On_clicking_Logout_Button -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:TestCases.TestCases@3835c46]" started-at="2023-01-31T18:18:17 IST" name="afterTest" finished-at="2023-01-31T18:18:17 IST" duration-ms="251" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method is-config="true" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:TestCases.TestCases@3835c46]" started-at="2023-01-31T18:18:17 IST" name="beforeTest" finished-at="2023-01-31T18:18:35 IST" duration-ms="17470" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public static void TestCases.TestCases.Test_Is_ResetPassword_PopUp_Closing_After_Clicking_Close_Button()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method signature="Test_Is_ResetPassword_PopUp_Closing_After_Clicking_Close_Button()[pri:0, instance:TestCases.TestCases@3835c46]" started-at="2023-01-31T18:18:35 IST" name="Test_Is_ResetPassword_PopUp_Closing_After_Clicking_Close_Button" finished-at="2023-01-31T18:19:07 IST" duration-ms="32240" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_Is_ResetPassword_PopUp_Closing_After_Clicking_Close_Button -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:TestCases.TestCases@3835c46]" started-at="2023-01-31T18:19:07 IST" name="afterTest" finished-at="2023-01-31T18:19:07 IST" duration-ms="261" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method is-config="true" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:TestCases.TestCases@3835c46]" started-at="2023-01-31T18:19:07 IST" name="beforeTest" finished-at="2023-01-31T18:19:50 IST" duration-ms="42972" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public static void TestCases.TestCases.Test_Login_Page_Content()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method signature="Test_Login_Page_Content()[pri:0, instance:TestCases.TestCases@3835c46]" started-at="2023-01-31T18:19:50 IST" name="Test_Login_Page_Content" finished-at="2023-01-31T18:19:50 IST" duration-ms="237" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_Login_Page_Content -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:TestCases.TestCases@3835c46]" started-at="2023-01-31T18:19:50 IST" name="afterTest" finished-at="2023-01-31T18:19:51 IST" duration-ms="200" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method is-config="true" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:TestCases.TestCases@3835c46]" started-at="2023-01-31T18:19:51 IST" name="beforeTest" finished-at="2023-01-31T18:20:07 IST" duration-ms="16566" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public static void TestCases.TestCases.Test_Login_With_Invalid_Data_For_Existing_User() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method signature="Test_Login_With_Invalid_Data_For_Existing_User()[pri:0, instance:TestCases.TestCases@3835c46]" started-at="2023-01-31T18:20:07 IST" name="Test_Login_With_Invalid_Data_For_Existing_User" finished-at="2023-01-31T18:20:17 IST" duration-ms="9850" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_Login_With_Invalid_Data_For_Existing_User -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:TestCases.TestCases@3835c46]" started-at="2023-01-31T18:20:17 IST" name="afterTest" finished-at="2023-01-31T18:20:17 IST" duration-ms="215" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method is-config="true" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:TestCases.TestCases@3835c46]" started-at="2023-01-31T18:20:17 IST" name="beforeTest" finished-at="2023-01-31T18:20:40 IST" duration-ms="22350" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public static void TestCases.TestCases.Test_Login_With_Valid_Data_For_Existing_User() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method signature="Test_Login_With_Valid_Data_For_Existing_User()[pri:0, instance:TestCases.TestCases@3835c46]" started-at="2023-01-31T18:20:40 IST" name="Test_Login_With_Valid_Data_For_Existing_User" finished-at="2023-01-31T18:20:53 IST" duration-ms="13831" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_Login_With_Valid_Data_For_Existing_User -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:TestCases.TestCases@3835c46]" started-at="2023-01-31T18:20:53 IST" name="afterTest" finished-at="2023-01-31T18:20:54 IST" duration-ms="221" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method is-config="true" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:TestCases.TestCases@3835c46]" started-at="2023-01-31T18:20:54 IST" name="beforeTest" finished-at="2023-01-31T18:21:25 IST" duration-ms="31066" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public static void TestCases.TestCases.Test_Login_without_Accepting_Terms_And_Conditions()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method signature="Test_Login_without_Accepting_Terms_And_Conditions()[pri:0, instance:TestCases.TestCases@3835c46]" started-at="2023-01-31T18:21:25 IST" name="Test_Login_without_Accepting_Terms_And_Conditions" finished-at="2023-01-31T18:21:25 IST" duration-ms="626" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_Login_without_Accepting_Terms_And_Conditions -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:TestCases.TestCases@3835c46]" started-at="2023-01-31T18:21:25 IST" name="afterTest" finished-at="2023-01-31T18:21:26 IST" duration-ms="232" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method is-config="true" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:TestCases.TestCases@3835c46]" started-at="2023-01-31T18:21:26 IST" name="beforeTest" finished-at="2023-01-31T18:21:45 IST" duration-ms="19760" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public static void TestCases.TestCases.Test_Login_without_Entering_Any_Credentials()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method signature="Test_Login_without_Entering_Any_Credentials()[pri:0, instance:TestCases.TestCases@3835c46]" started-at="2023-01-31T18:21:45 IST" name="Test_Login_without_Entering_Any_Credentials" finished-at="2023-01-31T18:21:45 IST" duration-ms="54" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_Login_without_Entering_Any_Credentials -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:TestCases.TestCases@3835c46]" started-at="2023-01-31T18:21:45 IST" name="afterTest" finished-at="2023-01-31T18:21:46 IST" duration-ms="221" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method is-config="true" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:TestCases.TestCases@3835c46]" started-at="2023-01-31T18:21:46 IST" name="beforeTest" finished-at="2023-01-31T18:22:01 IST" duration-ms="15530" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public static void TestCases.TestCases.Test_Terms_And_Condition_Is_Clickable_And_Return_Expected_Content()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method signature="Test_Terms_And_Condition_Is_Clickable_And_Return_Expected_Content()[pri:0, instance:TestCases.TestCases@3835c46]" started-at="2023-01-31T18:22:01 IST" name="Test_Terms_And_Condition_Is_Clickable_And_Return_Expected_Content" finished-at="2023-01-31T18:22:08 IST" duration-ms="7272" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_Terms_And_Condition_Is_Clickable_And_Return_Expected_Content -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:TestCases.TestCases@3835c46]" started-at="2023-01-31T18:22:08 IST" name="afterTest" finished-at="2023-01-31T18:22:09 IST" duration-ms="191" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method is-config="true" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:TestCases.TestCases@3835c46]" started-at="2023-01-31T18:22:09 IST" name="beforeTest" finished-at="2023-01-31T18:23:00 IST" duration-ms="50890" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public static void TestCases.TestCases.Test_User_Profile_Data_Is_Editable_And_When_Updated_Changes_Are_Visible_Dashboard()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method signature="Test_User_Profile_Data_Is_Editable_And_When_Updated_Changes_Are_Visible_Dashboard()[pri:0, instance:TestCases.TestCases@3835c46]" started-at="2023-01-31T18:23:00 IST" name="Test_User_Profile_Data_Is_Editable_And_When_Updated_Changes_Are_Visible_Dashboard" finished-at="2023-01-31T18:23:56 IST" duration-ms="56494" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_User_Profile_Data_Is_Editable_And_When_Updated_Changes_Are_Visible_Dashboard -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:TestCases.TestCases@3835c46]" started-at="2023-01-31T18:23:56 IST" name="afterTest" finished-at="2023-01-31T18:23:56 IST" duration-ms="272" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method is-config="true" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:TestCases.TestCases@3835c46]" started-at="2023-01-31T18:23:56 IST" name="beforeTest" finished-at="2023-01-31T18:24:10 IST" duration-ms="13960" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public static void TestCases.TestCases.Upload_Profile_Picture_And_Save_It()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method signature="Upload_Profile_Picture_And_Save_It()[pri:0, instance:TestCases.TestCases@3835c46]" started-at="2023-01-31T18:24:10 IST" name="Upload_Profile_Picture_And_Save_It" finished-at="2023-01-31T18:24:43 IST" duration-ms="32522" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Upload_Profile_Picture_And_Save_It -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:TestCases.TestCases@3835c46]" started-at="2023-01-31T18:24:43 IST" name="afterTest" finished-at="2023-01-31T18:24:43 IST" duration-ms="254" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method is-config="true" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:TestCases.TestCases@3835c46]" started-at="2023-01-31T18:24:43 IST" name="beforeTest" finished-at="2023-01-31T18:25:00 IST" duration-ms="17126" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public static void TestCases.TestCases.User_Is_Able_To_See_And_Accept_cookies()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method signature="User_Is_Able_To_See_And_Accept_cookies()[pri:0, instance:TestCases.TestCases@3835c46]" started-at="2023-01-31T18:25:00 IST" name="User_Is_Able_To_See_And_Accept_cookies" finished-at="2023-01-31T18:25:06 IST" duration-ms="6192" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- User_Is_Able_To_See_And_Accept_cookies -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:TestCases.TestCases@3835c46]" started-at="2023-01-31T18:25:06 IST" name="afterTest" finished-at="2023-01-31T18:25:07 IST" duration-ms="193" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method is-config="true" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:TestCases.TestCases@3835c46]" started-at="2023-01-31T18:25:07 IST" name="beforeTest" finished-at="2023-01-31T18:25:21 IST" duration-ms="14569" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public static void TestCases.TestCases.User_Is_Able_To_See_Dashboard()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method signature="User_Is_Able_To_See_Dashboard()[pri:0, instance:TestCases.TestCases@3835c46]" started-at="2023-01-31T18:25:21 IST" name="User_Is_Able_To_See_Dashboard" finished-at="2023-01-31T18:25:35 IST" duration-ms="13850" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- User_Is_Able_To_See_Dashboard -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:TestCases.TestCases@3835c46]" started-at="2023-01-31T18:25:35 IST" name="afterTest" finished-at="2023-01-31T18:25:35 IST" duration-ms="230" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method is-config="true" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:TestCases.TestCases@3835c46]" started-at="2023-01-31T18:25:35 IST" name="beforeTest" finished-at="2023-01-31T18:25:47 IST" duration-ms="11975" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public static void TestCases.TestCases.Welcome_Distributers_Name()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method signature="Welcome_Distributers_Name()[pri:0, instance:TestCases.TestCases@3835c46]" started-at="2023-01-31T18:25:47 IST" name="Welcome_Distributers_Name" finished-at="2023-01-31T18:25:58 IST" duration-ms="10466" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Welcome_Distributers_Name -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:TestCases.TestCases@3835c46]" started-at="2023-01-31T18:25:58 IST" name="afterTest" finished-at="2023-01-31T18:25:58 IST" duration-ms="229" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method is-config="true" signature="endReport()[pri:0, instance:TestCases.TestCases@3835c46]" started-at="2023-01-31T18:25:58 IST" name="endReport" finished-at="2023-01-31T18:25:58 IST" duration-ms="381" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
      </class> <!-- TestCases.TestCases -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
